<?php

/**
 * @file
 * FOIA UA module.
 */

use Drupal\Core\Url;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_toolbar_alter().
 */
function foia_ui_toolbar_alter(&$items) {
  $current_user = \Drupal::currentUser();

  $empty_item_cacheability = [
    '#cache' => [
      'contexts' => [
        'user.permissions',
      ],
    ],
  ];

  if ($current_user->hasPermission('access openapi api docs')) {
    $items['foia_api'] = [
      '#type' => 'toolbar_item',
      'tab' => [
        '#type' => 'link',
        '#title' => t('API'),
        '#url' => Url::fromRoute('foia_ui.api'),
        '#options' => [
          'set_active_class' => TRUE,
        ],
        '#attributes' => [
          'class' => ['toolbar-icon', 'toolbar-icon-system-modules-list'],
        ],
      ],
      '#weight' => -30,
    ];
  }
  else {
    $items['reservoir_api'] = $empty_item_cacheability;
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function foia_ui_form_node_annual_foia_report_data_edit_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form['actions']['validate_button'] = [
    '#type' => 'button',
    '#value' => t('Validate'),
    '#attached' => [
      'library' => [
        'foia_ui/jquery_validation',
        'foia_ui/foia_ui_validation',
        'foia_ui/foia_ui_admin',
      ],
      'drupalSettings' => [
        'foiaUI' => [
          'foiaUISettings' => [
            'formID' => '#node-annual-foia-report-data-edit-form',
          ],
        ],
      ],
    ],
  ];
  foreach ($form['field_foia_xiie2']['widget'] as $key => &$element) {
    if (is_int($key)) {
      $element['subform']['field_back_cur_yr']['widget']['0']['value']['#title'] = "Number of Backlogged Appeals as of End of the Fiscal Year from Current Annual Report";
      $element['subform']['field_back_prev_yr']['widget']['0']['value']['#title'] = "Number of Backlogged Appeals as of End of the Fiscal Year from Previous Annual Report";
    }
  }
  $form['meta']['changed']['#markup'] = "<h4 class='label inline'>" . $form['meta']['changed']['#title'] . "</h4> " . $form['meta']['changed']['#markup'];
  $form['meta']['author']['#markup'] = "<h4 class='label inline'>" . $form['meta']['author']['#title'] . "</h4> " . $form['meta']['author']['#markup'];
  unset($form['meta']['changed']['#title']);
  unset($form['meta']['author']['#title']);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function foia_ui_form_node_annual_foia_report_data_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form['actions']['validate_button'] = [
    '#type' => 'button',
    '#value' => t('Validate'),
    '#attached' => [
      'library' => [
        'foia_ui/jquery_validation',
        'foia_ui/foia_ui_validation',
        'foia_ui/foia_ui_admin',
      ],
      'drupalSettings' => [
        'foiaUI' => [
          'foiaUISettings' => [
            'formID' => '#node-annual-foia-report-data-form',
          ],
        ],
      ],
    ],
  ];
  $form['meta']['changed']['#markup'] = "<h4 class='label inline'>" . $form['meta']['changed']['#title'] . "</h4> " . $form['meta']['changed']['#markup'];
  $form['meta']['author']['#markup'] = "<h4 class='label inline'>" . $form['meta']['author']['#title'] . "</h4> " . $form['meta']['author']['#markup'];
  unset($form['meta']['changed']['#title']);
  unset($form['meta']['author']['#title']);
}

/**
 * Implements template_preprocess_details().
 */
function foia_ui_preprocess_details(&$variables) {
  if (isset($variables['element']['#entity_type'])) {
    $entity_type = $variables['element']['#entity_type'];
    if (isset($variables['element']['#bundle'])) {
      $bundle = $variables['element']['#bundle'];
      $problem_types = [
        'processed_requests_vii',
        'oldest_days',
        'foia_xii_received_proc',
      ];
      if ($entity_type == 'paragraph' && in_array($bundle, $problem_types)) {
        $context_id = '';
        foreach ($variables['element'] as $key => $value) {
          if ('field' == substr($key, 0, 5)) {
            $context_id = $value['#parents'][0];
            break;
          }
        }
        // Append parent form ID to generate unique fragment IDs on nested
        // vertical tabs using paragraphs.
        $variables['attributes']['id'] = $variables['attributes']['id'] . '--' . $context_id;
      }
    }
  }
}
