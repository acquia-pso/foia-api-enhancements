<?php

/**
 * @file
 * Primary module hooks for foia_annual_data_report module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Ajax\AlertCommand;
use Drupal\node\NodeInterface;
use Drupal\Core\Url;
use Drupal\Core\Ajax\RedirectCommand;

/**
 * Implements hook_form_form_id_alter().
 */
function foia_annual_data_report_form_node_annual_foia_report_data_edit_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  foia_annual_data_report_ajax_existing_node($form, $form_state, $form_id);
}

/**
 * Implements hook_form_form_id_alter().
 */
function foia_annual_data_report_form_node_annual_foia_report_data_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  foia_annual_data_report_ajax_new_node($form, $form_state, $form_id);
}

/**
 * Helper function to add ajax to update the component when the agency changes.
 *
 * @param array $form
 *   Form array passed from hook_form_form_id_alter().
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   Form state passed from hook_form_form_id_alter().
 * @param string $form_id
 *   Form id passed from hook_form_form_id_alter().
 */
function foia_annual_data_report_ajax_new_node(array &$form, FormStateInterface
 $form_state, $form_id) {

  $form['field_agency']['widget'][0]['target_id']['#ajax'] = [
    'callback' => 'foia_annual_data_report_create_node',
    'event' => 'change',
    'progress' => [
      'type' => 'throbber',
      'message' => 'Please Wait...',
    ],
  ];

}

/**
 * Helper function to add ajax to update the component when the agency changes.
 *
 * @param array $form
 *   Form array passed from hook_form_form_id_alter().
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   Form state passed from hook_form_form_id_alter().
 * @param string $form_id
 *   Form id passed from hook_form_form_id_alter().
 */
function foia_annual_data_report_ajax_existing_node(array &$form, FormStateInterface
 $form_state, $form_id) {

  $form['field_agency']['widget'][0]['target_id']['#ajax'] = [
    'callback' => 'foia_annual_data_report_refresh',
    'event' => 'change',
    'progress' => [
      'type' => 'throbber',
      'message' => 'Please Wait...',
    ],
  ];

}

/**
 * Save the node and redirect back to the edit page for the node.
 *
 * @todo
 * Figure out how to get the node ID of the newly created entity.
 *
 * @param array $form
 *   Form array passed from hook_form_form_id_alter().
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   Form state passed from hook_form_form_id_alter().
 *
 * @return \Drupal\Core\Ajax\AjaxResponse
 *   AjaxResponse object to alert user and redirect them.
 */
function foia_annual_data_report_create_node(array $form, FormStateInterface
 $form_state) {

  $is_node = \Drupal::routeMatch()->getParameter('node');
  $response = new AjaxResponse();
  $url = Url::fromRoute('<front>', [], ['absolute' => TRUE]);

  if ($is_node instanceof NodeInterface) {
    $node = \Drupal::entityTypeManager()->getStorage('node')->create([
      'type' => 'annual_foia_report_data',
      'title' => $form_state->getValue('title'),
      'field_agency' => $form_state->getValue('field_agency'),
    ]);
    $node->save();
    // Why does this not work???
    $nid = $node->id();
    $url = $url->toString() . '/node/' . $nid . '/edit';
  }

  $response->addCommand(new RedirectCommand($url));
  $response->addCommand(new AlertCommand("Please wait while the page refreshes"));
  // Debug.
  $response->addCommand(new AlertCommand($nid));
  return $response;
}

/**
 * Do all the magic to get the component list and update the Component options.
 *
 * @param array $form
 *   Form array passed from hook_form_form_id_alter().
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   Form state passed from hook_form_form_id_alter().
 */
function foia_annual_data_report_refresh(array $form, FormStateInterface
 $form_state) {

  $node = \Drupal::routeMatch()->getParameter('node');
  $response = new AjaxResponse();
  $currentURL = Url::fromRoute('<current>');

  if ($node instanceof NodeInterface) {
    $nid = $node->id();
    // $node = Node::load($nid);
    $node = \Drupal::entityManager()->getStorage('node')->load($nid);
    $node->set('field_agency', $form_state->getValue('field_agency'));
    $node->save();
    $response->addCommand(new RedirectCommand($currentURL->toString()));
    $response->addCommand(new AlertCommand("Please wait while the page refreshes"));
  }

  return $response;
}
